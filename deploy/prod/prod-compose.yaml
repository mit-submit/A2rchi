services:
  cleo:
    image: cleo-prod:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-cleo
      args:
        TAG: ${TAG}
    depends_on:
      chromadb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      RUNTIME_ENV: prod
      CLEO_URL_FILE: /run/secrets/cleo_url
      CLEO_USER_FILE: /run/secrets/cleo_user
      CLEO_PW_FILE: /run/secrets/cleo_pw
      CLEO_PROJECT_FILE: /run/secrets/cleo_project
      SENDER_SERVER_FILE: /run/secrets/sender_server
      SENDER_PORT_FILE: /run/secrets/sender_port
      SENDER_REPLYTO_FILE: /run/secrets/sender_replyto
      SENDER_USER_FILE: /run/secrets/sender_user
      SENDER_PW_FILE: /run/secrets/sender_pw
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - cleo_url
      - cleo_user
      - cleo_pw
      - cleo_project
      - sender_server
      - sender_port
      - sender_replyto
      - sender_user
      - sender_pw
      - openai_api_key
      - hf_token
    volumes:
      - a2rchi-prod-data:/root/data/
    logging:
      options:
        max-size: 10m
    restart: always

  chat:
    image: chat-prod:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-chat
      args:
        TAG: ${TAG}
    depends_on:
      chromadb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      RUNTIME_ENV: prod
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
    secrets:
      - openai_api_key
      - hf_token
      - pg_password
    volumes:
      - a2rchi-prod-data:/root/data/
    logging:
      options:
        max-size: 10m
    ports:
      - 7681:7861  # host:container
    restart: always

  mailbox:
    image: mailbox-prod:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-mailbox
      args:
        TAG: ${TAG}
    depends_on:
      chromadb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      RUNTIME_ENV: prod
      IMAP_USER_FILE: /run/secrets/imap_user
      IMAP_PW_FILE: /run/secrets/imap_pw
      CLEO_URL_FILE: /run/secrets/cleo_url
      CLEO_USER_FILE: /run/secrets/cleo_user
      CLEO_PW_FILE: /run/secrets/cleo_pw
      CLEO_PROJECT_FILE: /run/secrets/cleo_project
      SENDER_SERVER_FILE: /run/secrets/sender_server
      SENDER_PORT_FILE: /run/secrets/sender_port
      SENDER_REPLYTO_FILE: /run/secrets/sender_replyto
      SENDER_USER_FILE: /run/secrets/sender_user
      SENDER_PW_FILE: /run/secrets/sender_pw
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - imap_user
      - imap_pw
      - cleo_url
      - cleo_user
      - cleo_pw
      - cleo_project
      - sender_server
      - sender_port
      - sender_replyto
      - sender_user
      - sender_pw
      - openai_api_key
      - hf_token
    logging:
      options:
        max-size: 10m
    restart: always

  uploader:
    image: uploader-prod:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-uploader
      args:
        TAG: ${TAG}
    depends_on:
      chromadb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      RUNTIME_ENV: prod
      FLASK_UPLOADER_APP_SECRET_KEY_FILE: /run/secrets/flask_uploader_app_secret_key
      UPLOADER_SALT_FILE: /run/secrets/uploader_salt
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - flask_uploader_app_secret_key
      - uploader_salt
      - openai_api_key
      - hf_token
    ports:
      - 5001:5001  # host:container
    volumes:
      - a2rchi-prod-data:/root/data/
    logging:
      options:
        max-size: 10m
    restart: always

  chromadb:
    image: chromadb-prod:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-chroma
    environment:
      RUNTIME_ENV: prod
    ports:
      - 8000:8000  # host:container
    volumes:
      - a2rchi-prod-data:/chroma/chroma/
    logging:
      options:
        max-size: 10m
    restart: always
    # healthcheck originates from inside container; so use container port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/api/v1/heartbeat"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 5s

  postgres:
    image: postgres:16
    environment:
      RUNTIME_ENV: prod
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
      POSTGRES_USER: a2rchi
      POSTGRES_DB: a2rchi-db
    secrets:
      - pg_password
    volumes:
      - ../init.sql:/docker-entrypoint-initdb.d/init.sql
      - a2rchi-prod-pg-data:/var/lib/postgresql/data
    logging:
      options:
        max-size: 10m
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U a2rchi -d a2rchi-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana-prod:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-grafana
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 3000:3000  # host:container
    volumes:
      - a2rchi-prod-grafana-data:/var/lib/grafana
      - ../grafana/a2rchi-default-dashboard.json:/var/lib/grafana/dashboards/a2rchi-default-dashboard.json
    logging:
      options:
        max-size: 10m
    restart: always

volumes:
  a2rchi-prod-data:
    external: true
  a2rchi-prod-pg-data:
    external: true
  a2rchi-prod-grafana-data:
    external: true

secrets:
  imap_user:
    file: secrets/imap_user.txt
  imap_pw:
    file: secrets/imap_pw.txt
  cleo_url:
    file: secrets/cleo_url.txt
  cleo_user:
    file: secrets/cleo_user.txt
  cleo_pw:
    file: secrets/cleo_pw.txt
  cleo_project:
    file: secrets/cleo_project.txt
  sender_server:
    file: secrets/sender_server.txt
  sender_port:
    file: secrets/sender_port.txt
  sender_replyto:
    file: secrets/sender_replyto.txt
  sender_user:
    file: secrets/sender_user.txt
  sender_pw:
    file: secrets/sender_pw.txt
  flask_uploader_app_secret_key:
    file: secrets/flask_uploader_app_secret_key.txt
  uploader_salt:
    file: secrets/uploader_salt.txt
  openai_api_key:
    file: secrets/openai_api_key.txt
  hf_token:
    file: secrets/hf_token.txt
  pg_password:
    file: secrets/pg_password.txt
