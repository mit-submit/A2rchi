services:
  chat:
    image: chat:latest
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-chat
    depends_on:
      chromadb:
        condition: service_healthy
    environment:
      RUNTIME_ENV: dev
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - openai_api_key
      - hf_token
    volumes:
      - a2rchi-data:/root/data/
    logging:
      options:
        max-size: 10m
    ports:
      - 7861:7861  # host:container
    restart: always

  chromadb:
    image: chromadb:latest
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-chroma
    environment:
      RUNTIME_ENV: dev
    ports:
      - 8000:8000  # host:container
    volumes:
      - a2rchi-data:/chroma/chroma/
    logging:
      options:
        max-size: 10m
    restart: always
    # healthcheck originates from inside container; so use container port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/api/v1/heartbeat"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 5s

volumes:
  a2rchi-data:
    external: true

secrets:
  openai_api_key:
    file: secrets/openai_api_key.txt
  hf_token:
    file: secrets/hf_token.txt
