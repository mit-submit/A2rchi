name: Publish Base Images

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      A2RCHI_DIR: /home/runner/work/a2rchi-local
      HOME: /home/runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect base image changes
        id: base_changes
        run: |
          set -euo pipefail
          BEFORE="${{ github.event.before }}"
          if git cat-file -e "$BEFORE^{commit}" >/dev/null 2>&1; then
            FILES="$(git diff --name-only "$BEFORE" HEAD || true)"
          else
            FILES="$(git ls-tree --full-tree -r HEAD --name-only)"
          fi
          PATTERN='^(requirements/(?:cpu|gpu)-requirementsHEADER\.txt|requirements/requirements-base\.txt|src/cli/templates/dockerfiles/base-[^/]+/Dockerfile)'
          if [[ -z "$FILES" ]]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if echo "$FILES" | grep -E "$PATTERN" >/dev/null; then
            echo "Base image inputs changed:"
            echo "$FILES" | grep -E "$PATTERN"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build base images
        if: steps.base_changes.outputs.changed == 'true'
        id: build
        run: |
          set -euo pipefail
          TAG="main-${GITHUB_SHA::7}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          scripts/dev/build_docker_images.sh "$TAG"

      - name: Push base images to Docker Hub
        if: steps.base_changes.outputs.changed == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          PUSH_LATEST: "true"
        run: scripts/dev/push_docker_images.sh "${{ steps.build.outputs.tag }}"

      - name: Prune old main Docker tags
        if: ${{ success() && steps.base_changes.outputs.changed == 'true' }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          CURRENT_TAG: ${{ steps.build.outputs.tag }}
        run: |
          set -euo pipefail
          python scripts/dev/manage_docker_tags.py prune-prefix --prefix main- --keep "${CURRENT_TAG}"

      - name: Skip notification
        if: steps.base_changes.outputs.changed != 'true'
        run: echo "No base image inputs changed; skipping build and push."
