name: Deploy A2rchi Meta
run-name: ${{ github.actor }} deploys A2rchi Meta to prod
on:
  push:
    branches:
      - release-meta
jobs:
  deploy-prod-system:
    runs-on: ubuntu-latest
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    steps:
      # boilerplate message and pull repository to CI runner
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      # setup SSH 
      - name: Setup SSH
        run: |
          mkdir -p /home/runner/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY_MDRUSSO }}" > /home/runner/.ssh/id_rsa_submit
          chmod 600 /home/runner/.ssh/id_rsa_submit
          echo "${{ secrets.SSH_SUBMIT_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          cp ${{ github.workspace }}/deploy/ssh_config /home/runner/.ssh/config
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add /home/runner/.ssh/id_rsa_submit

      # TODO: update variables to be A2rchi meta-specific if need be
      # create secrets files for docker-compose
      - name: Create Secrets Files
        run: |
          mkdir -p ${{ github.workspace }}/deploy/prod-meta/secrets/
          workspace=${{ github.workspace }}
          env="prod-meta"
          sed -i "s/WORKSPACE/${workspace//\//\\/}/" ${workspace}/deploy/create_secret.sh
          sed -i "s/ENV/${env}/" ${workspace}/deploy/create_secret.sh
          /bin/bash ${workspace}/deploy/create_secret.sh imap_user.txt ${{ secrets.PROD_META_IMAP_USER }}
          /bin/bash ${workspace}/deploy/create_secret.sh imap_pw.txt ${{ secrets.PROD_IMAP_PW }}
          /bin/bash ${workspace}/deploy/create_secret.sh cleo_url.txt ${{ secrets.PROD_CLEO_URL }}
          /bin/bash ${workspace}/deploy/create_secret.sh cleo_user.txt ${{ secrets.PROD_CLEO_USER }}
          /bin/bash ${workspace}/deploy/create_secret.sh cleo_pw.txt ${{ secrets.PROD_CLEO_PW }}
          /bin/bash ${workspace}/deploy/create_secret.sh cleo_project.txt ${{ secrets.PROD_META_CLEO_PROJECT }}
          /bin/bash ${workspace}/deploy/create_secret.sh sender_server.txt ${{ secrets.PROD_SENDER_SERVER }}
          /bin/bash ${workspace}/deploy/create_secret.sh sender_port.txt ${{ secrets.PROD_SENDER_PORT }}
          /bin/bash ${workspace}/deploy/create_secret.sh sender_replyto.txt ${{ secrets.PROD_META_SENDER_REPLYTO }}
          /bin/bash ${workspace}/deploy/create_secret.sh sender_user.txt ${{ secrets.PROD_SENDER_USER }}
          /bin/bash ${workspace}/deploy/create_secret.sh sender_pw.txt ${{ secrets.PROD_SENDER_PW }}
          /bin/bash ${workspace}/deploy/create_secret.sh flask_uploader_app_secret_key.txt ${{ secrets.PROD_FLASK_UPLOADER_APP_SECRET_KEY }}
          /bin/bash ${workspace}/deploy/create_secret.sh uploader_salt.txt ${{ secrets.PROD_UPLOADER_SALT }}
          /bin/bash ${workspace}/deploy/create_secret.sh openai_api_key.txt ${{ secrets.OPENAI_API_KEY }}
          /bin/bash ${workspace}/deploy/create_secret.sh hf_token.txt ${{ secrets.HF_TOKEN }}

      # create env file to set tag(s) for docker-compose
      - name: Create Env File
        run: |
          touch ${{ github.workspace }}/deploy/prod-meta/.env
          export tag="${GITHUB_REF#refs/heads/}"
          export tag="${tag//\//-}.${GITHUB_SHA}"
          echo "TAG=${tag}" >> ${{ github.workspace }}/deploy/prod-meta/.env

      # create deployment directory if it doesn't already exist
      - name: Create Directory
        run: |
          ssh submit06 "mkdir -p ~/A2rchi-prod-meta/"

      # stop any existing docker compose that's running
      - name: Stop Docker Compose
        run: |
          ssh submit06 'bash -s' < ${{ github.workspace }}/deploy/prod-meta/prod-meta-stop.sh

      # copy repository to machine
      - name: Copy Repository
        run: |
          rsync -e ssh -r ${{ github.workspace}}/* --exclude .git/ --delete submit06:~/A2rchi-prod-meta/

      # run deploy script
      - name: Run Deploy Script
        run: |
          export tag="${GITHUB_REF#refs/heads/}"
          export tag="${tag//\//-}.${GITHUB_SHA}"
          sed -i "s/BASE_TAG/${tag}/" ${{ github.workspace }}/deploy/prod-meta/prod-meta-install.sh
          ssh submit06 'bash -s' < ${{ github.workspace }}/deploy/prod-meta/prod-meta-install.sh

      # clean up secret files
      - name: Remove Secrets from Runner
        run: |
          rm ${{ github.workspace }}/deploy/prod-meta/secrets/*.txt

      # print job status
      - run: echo "🍏 This job's status is ${{ job.status }}."