services:
  # Infrastructure services (always present when chromadb is enabled)
  {% if chromadb_enabled -%}
  chromadb:
    image: {{ chromadb_image }}:{{ chromadb_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-chroma
    container_name: {{ chromadb_container_name }}
    ports:
      - {{ chromadb_port_host }}:8000
    volumes:
      - {{ chromadb_volume_name }}:/chroma/chroma/
    environment:
      - CHROMA_PORT={{ chromadb_port_host if host_mode else 8000 }}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:{{ chromadb_port_host if host_mode else 8000 }}/api/v1/heartbeat"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 5s
  {%- endif %}

  {% if postgres_enabled -%}
  postgres:
    image: docker.io/postgres:16
    container_name: {{ postgres_container_name }}
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
      POSTGRES_USER: a2rchi
      POSTGRES_DB: a2rchi-db
    secrets:
      - pg_password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - {{ postgres_volume_name }}:/var/lib/postgresql/data
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U a2rchi -d a2rchi-db"]
      interval: 10s
      timeout: 5s
      retries: 5
  {%- endif %}

  # Application services (conditional)
  {% if chat_app_enabled -%}
  chatbot:
    image: {{ chat_app_image }}:{{ chat_app_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-chat{{ '-gpu' if gpu_ids else '' }}
    container_name: {{ chat_app_container_name }}
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
      {% if gpu_ids -%}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
      {% endif %}
    {% if gpu_ids and not use_podman -%}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    {% endif %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    volumes:
      - {{ chat_app_volume_name }}:/root/data/
      - ./config.yaml:/root/A2rchi/config.yaml
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    ports:
      - {{ chat_app_port_host }}:{{ chat_app_port_container }}
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    {% if gpu_ids and use_podman -%}
    security_opt:
      - label:disable
    devices:
    {%- if gpu_ids == "all" %}
      - "nvidia.com/gpu=all"
    {%- else %}
      {%- for gpu_id in gpu_ids %}
      - "nvidia.com/gpu={{ gpu_id }}"
      {%- endfor %}
    {%- endif %}
    {%- endif %}
  {%- endif %}

  {% if grafana_enabled -%}
  grafana:
    image: {{ grafana_image }}:{{ grafana_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-grafana
    container_name: {{ grafana_container_name }}
    depends_on:
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    ports:
      - {{ grafana_port_host }}:3000
    volumes:
      - {{ grafana_volume_name }}:/var/lib/grafana
      - ./grafana/a2rchi-default-dashboard.json:/var/lib/grafana/dashboards/a2rchi-default-dashboard.json
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
  {%- endif %}

  {% if uploader_enabled -%}
  uploader:
    image: {{ uploader_image }}:{{ uploader_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-uploader
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    ports:
      - {{ uploader_port_host }}:{{ uploader_port_container }}
    volumes:
      - {{ chromadb_volume_name }}:/root/data/
      - ./config.yaml:/root/A2rchi/config.yaml
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
  {%- endif %}

  {% if grader_enabled -%}
  grader:
    image: {{ grader_image }}:{{ grader_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-grader{{ '-gpu' if gpu_ids else '' }}
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
      {% if gpu_ids -%}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
      {% endif %}
      USERS_FILE: /root/A2rchi/users.csv
      {% for rubric in rubrics | default([]) -%}
      {{ rubric.upper() }}_FILE: /root/A2rchi/{{ rubric }}.txt
      {% endfor %}
    {% if gpu_ids and not use_podman -%}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    {% endif %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    ports: 
      - {{ grader_port_host }}:{{ grader_port_container }}
    volumes:
      - {{ grader_volume_name }}:/root/data/
      - ./config.yaml:/root/A2rchi/config.yaml
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      - ./users.csv:/root/A2rchi/users.csv
      {%- for rubric in rubrics | default([]) %}
      - ./{{ rubric }}.txt:/root/A2rchi/{{ rubric }}.txt
      {%- endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    {% if gpu_ids and use_podman -%}
    security_opt:
      - label:disable
    devices:
    {%- if gpu_ids == "all" %}
      - "nvidia.com/gpu=all"
    {%- else %}
      {%- for gpu_id in gpu_ids %}
      - "nvidia.com/gpu={{ gpu_id }}"
      {%- endfor %}
    {%- endif %}
    {%- endif %}
  {%- endif %}

  {% if piazza_enabled -%}
  piazza:
    image: {{ piazza_image }}:{{ piazza_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-piazza
    container_name: {{ piazza_container_name }}
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    volumes:
      - {{ chromadb_volume_name }}:/root/data/
      - ./config.yaml:/root/A2rchi/config.yaml
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
  {%- endif %}

  {% if mattermost_enabled -%}
  mattermost:
    image: {{ mattermost_image }}:{{ mattermost_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-mattermost{{ '-gpu' if gpu_ids else '' }}
      args:
        TAG: {{ mattermost_tag }}
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
      {% if gpu_ids -%}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
      {% endif %}
    {% if gpu_ids and not use_podman -%}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    {% endif %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    volumes:
      - {{ chromadb_volume_name }}:/root/data/
      - ./config.yaml:/root/A2rchi/config.yaml
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    {% if gpu_ids and use_podman -%}
    security_opt:
      - label:disable
    devices:
    {%- if gpu_ids == "all" %}
      - "nvidia.com/gpu=all"
    {%- else %}
      {%- for gpu_id in gpu_ids %}
      - "nvidia.com/gpu={{ gpu_id }}"
      {%- endfor %}
    {%- endif %}
    {%- endif %}
  {%- endif %}

  {% if redmine_mailer_enabled -%}
  redmine:
    image: {{ redmine_mailer_image }}-redmine:{{ redmine_mailer_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-redmine{{ '-gpu' if gpu_ids else '' }}
    container_name: {{ redmine_mailer_container_name }}-redmine
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
      {% if gpu_ids -%}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
      {% endif %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    volumes:
      - {{ chromadb_volume_name }}:/root/data/
      - ./config.yaml:/root/A2rchi/config.yaml
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    {% if gpu_ids and use_podman -%}
    security_opt:
      - label:disable
    devices:
    {%- if gpu_ids == "all" %}
      - "nvidia.com/gpu=all"
    {%- else %}
      {%- for gpu_id in gpu_ids %}
      - "nvidia.com/gpu={{ gpu_id }}"
      {%- endfor %}
    {%- endif %}
    {%- endif %}

  mailbox:
    image: {{ redmine_mailer_image }}-mailer:{{ redmine_mailer_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-mailbox{{ '-gpu' if gpu_ids else '' }}
    container_name: {{ redmine_mailer_container_name }}-mailer
    depends_on:
      {% if chromadb_enabled -%}
      chromadb:
        condition: service_healthy
      {% endif -%}
      {% if postgres_enabled -%}
      postgres:
        condition: service_healthy
      {% endif %}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
      {% if gpu_ids -%}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
      {% endif %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    volumes:
      - ./config.yaml:/root/A2rchi/config.yaml
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if host_mode -%}
    network_mode: host
    {% endif %}
    {% if gpu_ids and use_podman -%}
    security_opt:
      - label:disable
    devices:
    {%- if gpu_ids == "all" %}
      - "nvidia.com/gpu=all"
    {%- else %}
      {%- for gpu_id in gpu_ids %}
      - "nvidia.com/gpu={{ gpu_id }}"
      {%- endfor %}
    {%- endif %}
    {%- endif %}
  {%- endif %}

  {% if benchmarking_enabled -%}
  benchmark:
    image: {{ benchmarking_image }}:{{ benchmarking_tag }}
    build:
      context: .
      dockerfile: a2rchi_code/cli/templates/dockerfiles/Dockerfile-benchmarks{{ '-gpu' if gpu_ids else '' }}
    container_name: {{ benchmarking_container_name }}
    environment:
      {% for secret in required_secrets | default([]) -%}
      {{ secret.upper() }}_FILE: /run/secrets/{{ secret.lower() }}
      {% endfor %}
      {% if gpu_ids -%}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
      {% endif %}
      container_name: {{ benchmarking_container_name }}
      mode: {{ benchmarking_mode }}
    {% if gpu_ids and not use_podman -%}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    {% endif %}
    secrets:
      {% for secret in required_secrets | default([]) -%}
      - {{ secret.lower() }}
      {% endfor %}
    volumes:
      - {{ benchmarker_volume_name }}:/root/data/
      - ./queries.txt:/root/A2rchi/QandA.txt
      - {{ benchmarking_dest }}:/root/A2rchi/benchmarks
      {% for prompt_file in prompt_files | default([]) -%}
      - ./{{ prompt_file }}:/root/A2rchi/{{ prompt_file }}
      {% endfor %}
      {% if gpu_ids -%}
      - a2rchi-models:/root/models/
      {%- endif %}
    logging:
      options:
        max-size: 10m
    restart: always
    {% if gpu_ids and use_podman -%}
    security_opt:
      - label:disable
    devices:
    {%- if gpu_ids == "all" %}
      - "nvidia.com/gpu=all"
    {%- else %}
      {%- for gpu_id in gpu_ids %}
      - "nvidia.com/gpu={{ gpu_id }}"
      {%- endfor %}
    {%- endif %}
    {%- endif %}
  {%- endif %}

volumes:
  {% for volume in required_volumes -%}
  {{ volume }}:
    external: true
  {% endfor %}

{% if required_secrets %}
secrets:
  {% for secret in required_secrets -%}
  {{ secret.lower() }}:
    file: secrets/{{ secret.lower() }}.txt
  {% endfor %}
{% endif %}
