name: {{ name | default("default", true) }}

global:
  DATA_PATH: "{{ global.DATA_PATH | default('/root/data/', true) }}"
  ACCOUNTS_PATH: "{{ global.ACCOUNTS_PATH | default('/root/.accounts/', true) }}"
  ACCEPTED_FILES: 
    {%- for file_type in global.ACCEPTED_FILES | default(['.txt', '.html', '.pdf']) %}
    - "{{ file_type }}"
    {%- endfor %}
  LOGGING:
    input_output_filename: "{{ global.LOGGING.input_output_filename | default('chain_input_output.log', true) }}"
  verbosity: {{ verbosity | default(3, true) }}

# CHANGES THAT HAVE BEEN MADE SO FAR:
# rename interfaces -> services 
# piazza, mattermost, redmine, mailbox, postgres, and chromadb are all services now 
# global trained on -> chat_app
# global ROLES -> deleted 
#
services:
  {% if services.piazza and services.piazza.network_id -%}
  piazza:
    network_id: {{ services.piazza.network_id }}
    update_time: {{ services.piazza.update_time | default(60, true) }}
  {% endif -%}
  mattermost:
    update_time: {{ services.mattermost.update_time | default(60, true) }}
  redmine: 
    redmine_update_time: {{ services.redmine.redmine_update_time | default(10, true) }}
    answer_tag: {{ services.redmine.answer_tag | default('-- A2rchi -- Resolving email was sent', true) }}
  mailbox: 
    imap4_port: {{ services.mailbox.imap4_port | default(143, true) }}
    mailbox_update_time: {{ services.mailbox.mailbox_update_time | default(10, true) }}
  postgres:
    port: {{ services.postgres.port | default(5432, true) }}
    user: {{ services.postgres.user | default('a2rchi', true) }}
    database: {{ services.postgres.database | default('a2rchi-db', true) }}
    host: {{ 'localhost' if host_mode else (utils.postgres.host | default('postgres', true)) }}
  chat_app:
    trained_on: {{ services.chat_app.trained_on | default("", true) }}
    port: {{ services.chat_app.port | default(7861, true) }}
    external_port: {{ services.chat_app.external_port | default(7861, true) }}
    host: {{ services.chat_app.host | default("0.0.0.0", true) }}
    hostname: {{ services.chat_app.hostname | default("localhost", true) }}
    template_folder: "{{ services.chat_app.template_folder | default('/root/A2rchi/a2rchi/interfaces/chat_app/templates', true) }}"
    static_folder: "{{ services.chat_app.static_folder | default('/root/A2rchi/a2rchi/interfaces/chat_app/static', true) }}"
    num_responses_until_feedback: {{ services.chat_app.num_responses_until_feedback | default(3, true) }}
    include_copy_button: {{ services.chat_app.include_copy_button | default(false, true) }}
    enable_debug_chroma_endpoints: {{ services.chat_app.enable_debug_chroma_endpoints | default(false, true) }}
    flask_debug_mode: {{ services.chat_app.flask_debug_mode | default(true, false) }}
  uploader_app:
    port: {{ services.uploader_app.port | default(5001, true) }}
    external_port: {{ services.uploader_app.external_port | default(5003, true) }}
    host: {{ services.uploader_app.host | default("0.0.0.0", true) }}
    template_folder: "{{ services.uploader_app.template_folder | default('/root/A2rchi/a2rchi/interfaces/uploader_app/templates', true) }}"
    verify_urls: {{ services.uploader_app.verify_urls | default(true, false) }}
    flask_debug_mode: {{ services.uploader_app.flask_debug_mode | default(true, false) }}
  grader_app:
    port: {{ services.grader_app.port | default(7861, true) }}
    external_port: {{ services.grader_app.external_port | default(7862, true) }}
    host: {{ services.grader_app.host | default("0.0.0.0", true) }}
    hostname: {{ services.grader_app.hostname | default("localhost", true) }}
    template_folder: "{{ services.grader_app.template_folder | default('/root/A2rchi/a2rchi/interfaces/grader_app/templates', true) }}"
    num_problems: {{ services.grader_app.num_problems | default(1, true) }}
    local_rubric_dir: "{{ services.grader_app.local_rubric_dir }}"
    local_users_csv_dir: "{{ services.grader_app.local_users_csv_dir }}"
    flask_debug_mode: {{ services.grader_app.flask_debug_mode | default(true, false) }}
  chromadb:
    use_HTTP_chromadb_client: {{ services.chromadb.use_HTTP_chromadb_client | default(true, true) }}
    chromadb_host: {{ 'localhost' if host_mode else (services.chromdb.chromadb_host | default('chromadb', true)) }}
    chromadb_port: {{ services.chromadb.chromadb_port | default(8000, true) }}
    chromadb_external_port: {{ services.chromadb.chromadb_external_port | default(8000, true) }}
    local_vstore_path: "{{ services.chromadb.local_vstore_path | default('/root/data/vstore/', true) }}"
  grafana:
    external_port: {{ services.grafana.external_port | default(3000, true) }}

data_manager:
  collection_name: {{ collection_name | default("default_collection", true) }}
  input_lists:
    {%- for input_list in data_manager.input_lists | default([]) %}
    - {{ input_list }}
    {%- endfor %}
  embedding_name: {{ data_manager.embedding_name | default('OpenAIEmbeddings', true) }}
  embedding_class_map:
    OpenAIEmbeddings:
      class: OpenAIEmbeddings
      kwargs:
        model: {{ data_manager.embedding_class_map.OpenAIEmbeddings.kwargs.model | default('text-embedding-3-small', true) }}
      similarity_score_reference: {{ data_manager.embedding_class_map.OpenAIEmbeddings.similarity_score_reference | default(10, true) }}
    HuggingFaceEmbeddings:
      class: HuggingFaceEmbeddings
      kwargs:
        model_name: {{ data_manager.embedding_class_map.HuggingFaceEmbeddings.kwargs.model_name | default('sentence-transformers/all-MiniLM-L6-v2', true) }}
        model_kwargs:
          device: {{ data_manager.embedding_class_map.HuggingFaceEmbeddings.kwargs.model_kwargs.device | default('cpu', true) }}
        encode_kwargs: 
          normalize_embeddings: {{ data_manager.embedding_class_map.HuggingFaceEmbeddings.kwargs.encode_kwargs.normalize_embeddings | default(true, true) }}
      similarity_score_reference: {{ data_manager.embedding_class_map.HuggingFaceEmbeddings.similarity_score_reference | default(10, true) }}
      query_embedding_instructions: {{ data_manager.embedding_class_map.HuggingFaceEmbeddings.query_embedding_instructions | default("null", true) }}
  chunk_size: {{ data_manager.chunk_size | default(1000, true) }}
  chunk_overlap: {{ data_manager.chunk_overlap | default(0, true) }}
  reset_collection: {{ data_manager.reset_collection | default(true, true) }}
  num_documents_to_retrieve: {{ data_manager.num_documents_to_retrieve | default(5, true) }}
  stemming:
    enabled: {{ data_manager.stemming.enabled | default(false, true) }}
  distance_metric: {{ data_manager.distance_metric | default('cosine', true) }}
  use_hybrid_search: {{ data_manager.use_hybrid_search | default(false, true) }}
  bm25_weight: {{ data_manager.bm25_weight | default(0.6, true) }}
  semantic_weight: {{ data_manager.semantic_weight | default(0.4, true) }}
  bm25:
    k1: {{ data_manager.bm25.k1 | default(0.5, true) }}
    b: {{ data_manager.bm25.b | default(0.75, true) }}

a2rchi:
  pipelines: {{ a2rchi.pipelines | default(['QAPipeline'], true) }}
  pipeline_map:
    QAPipeline:
      max_tokens: {{ a2rchi.pipeline_map.QAPipeline.max_tokens | default(10000, true) }}
      prompts:
        required:
          condense_prompt: {% if a2rchi.pipeline_map.QAPipeline.prompts.required.condense_prompt %}"{{ a2rchi.pipeline_map.QAPipeline.prompts.required.condense_prompt }}"{% else %}null{% endif %}
          chat_prompt: {% if a2rchi.pipeline_map.QAPipeline.prompts.required.chat_prompt %}"{{ a2rchi.pipeline_map.QAPipeline.prompts.required.chat_prompt }}"{% else %}null{% endif %}
      models:
        required:
          condense_model: {{ a2rchi.pipeline_map.QAPipeline.models.required.condense_model | default('DumbLLM', true) }}
          chat_model: {{ a2rchi.pipeline_map.QAPipeline.models.required.chat_model | default('DumbLLM', true) }}
    GradingPipeline:
      max_tokens: {{ a2rchi.pipeline_map.GradingPipeline.max_tokens | default(10000, true) }}
      prompts:
        required:
          final_grade_prompt: {% if a2rchi.pipeline_map.GradingPipeline.prompts.required.final_grade_prompt %}"{{ a2rchi.pipeline_map.GradingPipeline.prompts.required.final_grade_prompt }}"{% else %}null{% endif %}
        optional:
          summary_prompt: {% if a2rchi.pipeline_map.GradingPipeline.prompts.optional.summary_prompt %}"{{ a2rchi.pipeline_map.GradingPipeline.prompts.optional.summary_prompt }}"{% else %}null{% endif %}
          analysis_prompt: {% if a2rchi.pipeline_map.GradingPipeline.prompts.optional.analysis_prompt %}"{{ a2rchi.pipeline_map.GradingPipeline.prompts.optional.analysis_prompt }}"{% else %}null{% endif %}
      models:
        required:
          final_grade_model: {{ a2rchi.pipeline_map.GradingPipeline.models.required.final_grade_model | default('HuggingFaceOpenLLM', true) }}
        optional:
          summary_model: {{ a2rchi.pipeline_map.GradingPipeline.models.optional.summary_model | default('HuggingFaceOpenLLM', true) }}
          analysis_model: {{ a2rchi.pipeline_map.GradingPipeline.models.optional.analysis_model | default('HuggingFaceOpenLLM', true) }}
    ImageProcessingPipeline:
      max_tokens: {{ a2rchi.pipeline_map.ImageProcessingPipeline.max_tokens | default(10000, true) }}
      prompts:
        required:
          image_processing_prompt: {% if a2rchi.pipeline_map.ImageProcessingPipeline.prompts.required.image_processing_prompt %}"{{ a2rchi.pipeline_map.ImageProcessingPipeline.prompts.required.image_processing_prompt }}"{% else %}null{% endif %}
      models:
        required:
          image_processing_model: {{ a2rchi.pipeline_map.ImageProcessingPipeline.models.required.image_processing_model | default('HuggingFaceImageLLM', true) }}
    
  model_class_map:
    AnthropicLLM:
      class: AnthropicLLM
      kwargs:
        model_name: {{ a2rchi.model_class_map.AnthropicLLM.kwargs.model_name | default('claude-3-opus-20240229', true) }}
        temperature: {{ a2rchi.model_class_map.AnthropicLLM.kwargs.temperature | default(1, true) }}
    OpenAIGPT4:
      class: OpenAILLM
      kwargs:
        model_name: {{ a2rchi.model_class_map.OpenAIGPT4.kwargs.model_name | default('gpt-4', true) }}
        temperature: {{ a2rchi.model_class_map.OpenAIGPT4.kwargs.temperature | default(1, true) }}
    OpenAIGPT35:
      class: OpenAILLM
      kwargs:
        model_name: {{ a2rchi.model_class_map.OpenAIGPT35.kwargs.model_name | default('gpt-3.5-turbo', true) }}
        temperature: {{ a2rchi.model_class_map.OpenAIGPT35.kwargs.temperature | default(1, true) }}
    DumbLLM:
      class: DumbLLM
      kwargs:
        sleep_time_mean: {{ a2rchi.model_class_map.DumbLLM.kwargs.sleep_time_mean | default(3, true) }}
        filler: {{ a2rchi.model_class_map.DumbLLM.kwargs.filler | default('I am a dummy LLM response.', true) }}
    LlamaLLM:
      class: LlamaLLM
      kwargs:
        base_model: {{ a2rchi.model_class_map.LlamaLLM.kwargs.base_model | default("meta-llama/Llama-2-7b-chat-hf", true) }}
        peft_model: {{ a2rchi.model_class_map.LlamaLLM.kwargs.peft_model | default("null", true) }}
        enable_salesforce_content_safety: {{ a2rchi.model_class_map.LlamaLLM.kwargs.enable_salesforce_content_safety | default(false, false) }}
        quantization: {{ a2rchi.model_class_map.LlamaLLM.kwargs.quantization | default(true, true) }}
        max_new_tokens: {{ a2rchi.model_class_map.LlamaLLM.kwargs.max_new_tokens | default(4096, true) }}
        seed: {{ a2rchi.model_class_map.LlamaLLM.kwargs.seed | default("null", true) }}
        do_sample: {{ a2rchi.model_class_map.LlamaLLM.kwargs.do_sample | default(true, true) }}
        min_length: {{ a2rchi.model_class_map.LlamaLLM.kwargs.min_length | default("null", true) }}
        use_cache: {{ a2rchi.model_class_map.LlamaLLM.kwargs.use_cache | default(true, true) }}
        top_p: {{ a2rchi.model_class_map.LlamaLLM.kwargs.top_p | default(0.9, true) }}
        temperature: {{ a2rchi.model_class_map.LlamaLLM.kwargs.temperature | default(0.6, true) }}
        top_k: {{ a2rchi.model_class_map.LlamaLLM.kwargs.top_k | default(50, true) }}
        repetition_penalty: {{ a2rchi.model_class_map.LlamaLLM.kwargs.repetition_penalty | default(1.0, true) }}
        length_penalty: {{ a2rchi.model_class_map.LlamaLLM.kwargs.length_penalty | default(1, true) }}
        max_padding_length: {{ a2rchi.model_class_map.LlamaLLM.kwargs.max_padding_length | default("null", true) }}
    HuggingFaceOpenLLM:
      class: HuggingFaceOpenLLM
      kwargs:
        base_model: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.base_model | default("Qwen/Qwen2.5-7B-Instruct-1M", true) }}
        peft_model: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.peft_model | default("null", true) }}
        enable_salesforce_content_safety: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.enable_salesforce_content_safety | default(false, false) }}
        quantization: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.quantization | default(true, true) }}
        max_new_tokens: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.max_new_tokens | default(4096, true) }}
        seed: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.seed | default("null", true) }}
        do_sample: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.do_sample | default(true, true) }}
        min_length: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.min_length | default("null", true) }}
        use_cache: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.use_cache | default(true, true) }}
        top_p: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.top_p | default(0.9, true) }}
        temperature: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.temperature | default(0.6, true) }}
        top_k: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.top_k | default(50, true) }}
        repetition_penalty: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.repetition_penalty | default(1.0, true) }}
        length_penalty: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.length_penalty | default(1, true) }}
        max_padding_length: {{ a2rchi.model_class_map.HuggingFaceOpenLLM.kwargs.max_padding_length | default("null", true) }}
    HuggingFaceImageLLM:
      class: HuggingFaceImageLLM
      kwargs:
        base_model: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.base_model | default("Qwen/Qwen2.5-VL-7B-Instruct", true) }}
        quantization: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.quantization | default(true, true) }}
        min_pixels: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.min_pixels | default(175616, true) }}
        max_pixels: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.max_pixels | default(1003520, true) }}
        max_new_tokens: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.max_new_tokens | default(4096, true) }}
        seed: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.seed | default("null", true) }}
        do_sample: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.do_sample | default(false, false) }}
        min_length: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.min_length | default("null", true) }}
        use_cache: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.use_cache | default(true, true) }}
        top_k: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.top_k | default(50, true) }}
        repetition_penalty: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.repetition_penalty | default(1.0, true) }}
        length_penalty: {{ a2rchi.model_class_map.HuggingFaceImageLLM.kwargs.length_penalty | default(1, true) }}
    VLLM:
      class: VLLM
      kwargs:
        base_model: {{ a2rchi.model_class_map.VLLM.kwargs.base_model | default("deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B", true) }}
        seed: {{ a2rchi.model_class_map.VLLM.kwargs.seed | default("null", true) }}
        enable_salesforce_content_safety: {{ a2rchi.model_class_map.VLLM.kwargs.enable_salesforce_content_safety | default(false, false) }}
        max_new_tokens: {{ a2rchi.model_class_map.VLLM.kwargs.max_new_tokens | default(4096, true) }}
        top_p: {{ a2rchi.model_class_map.VLLM.kwargs.top_p | default(0.95, true) }}
        temperature: {{ a2rchi.model_class_map.VLLM.kwargs.temperature | default(0.6, true) }}
        top_k: {{ a2rchi.model_class_map.VLLM.kwargs.top_k | default(50, true) }}
        repetition_penalty: {{ a2rchi.model_class_map.VLLM.kwargs.repetition_penalty | default(1.0, true) }}
        tensor_parallel_size: {{ a2rchi.model_class_map.VLLM.kwargs.tensor_parallel_size | default(1, true) }}
        gpu_memory_utilization: {{ a2rchi.model_class_map.VLLM.kwargs.gpu_memory_utilization | default(0.7, true) }}
        trust_remote_code: {{ a2rchi.model_class_map.VLLM.kwargs.trust_remote_code | default(true, true) }}
        tokenizer_mode: {{ a2rchi.model_class_map.VLLM.kwargs.tokenizer_mode | default("auto", true) }}
        max_model_len: {{ a2rchi.model_class_map.VLLM.kwargs.max_model_len | default(none, true) }}
    OllamaInterface:
      class: OllamaInterface
      kwargs:
        base_model: {{ a2rchi.model_class_map.OllamaInterface.kwargs.base_model | default("gemma3", true) }}
        temperature: {{ a2rchi.model_class_map.OllamaInterface.kwargs.temperature | default(1, true) }}
        max_tokens: {{ a2rchi.model_class_map.OllamaInterface.kwargs.max_tokens | default(1000, true) }}
        url: {{ a2rchi.model_class_map.OllamaInterface.kwargs.url | default("http://localhost:7680", true) }}
  chain_update_time: {{ a2rchi.chain_update_time | default(10, true) }}

utils:
  sso:
    enabled: {{ utils.sso.enabled | default(false, true) }}
    sso_class: {{ utils.sso.sso_class | default('CERNSSOScraper', true) }}
    sso_class_map:
      CERNSSOScraper:
        class: CERNSSOScraper
        kwargs:
          headless: {{ utils.sso.sso_class_map.CERNSSOScraper.kwargs.headless | default(true, true) }}
          max_depth: {{ utils.sso.sso_class_map.CERNSSOScraper.kwargs.max_depth | default(2, true) }}
  git:
    enabled: {{ utils.git.enabled | default(false, true) }}
  scraper:
    reset_data: {{ utils.scraper.reset_data | default(true, true) }}
    verify_urls: {{ utils.scraper.verify_urls | default(false, true) }}
    enable_warnings: {{ utils.scraper.enable_warnings | default(false, true) }}
  jira:
    url: {{ utils.jira.JIRA_URL }}
    projects: 
      {%- for project in utils.jira.JIRA_PROJECTS %}
      - {{ project }}
      {%- endfor %}
    anonymize_data: {{ utils.jira.ANONYMIZE_DATA | default(true, true) }}
  anonymizer:
    nlp_model: {{ utils.anonymizer.nlp_model | default('en_core_web_sm', true) }}
    excluded_words: 
      {%- for word in utils.anonymizer.excluded_words | default(['John', 'Jane', 'Doe']) %}
      - {{ word }}
      {%- endfor %}
    greeting_patterns: 
      {%- for pattern in utils.anonymizer.greeting_patterns | default(['^(hi|hello|hey|greetings|dear)\\b', '^\\w+,\\s*']) %}
      - {{ pattern }}
      {%- endfor %}
    signoff_patterns: 
      {%- for pattern in utils.anonymizer.signoff_patterns | default(['\\b(regards|sincerely|best regards|cheers|thank you)\\b', '^\\s*[-~]+\\s*$']) %}
      - {{ pattern }}
      {%- endfor %}
    email_pattern: '{{ utils.anonymizer.email_pattern | default("[\\w\\.-]+@[\\w\\.-]+\\.\\w+") }}'
    username_pattern: '{{ utils.anonymizer.username_pattern | default("\\[~[^\\]]+\\]") }}'
